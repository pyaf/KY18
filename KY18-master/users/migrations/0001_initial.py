# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-07-20 14:26
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import users.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='KYProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=50, unique=True)),
                ('full_name', models.CharField(blank=True, max_length=130, null=True)),
                ('year', models.PositiveSmallIntegerField(blank=True, choices=[(None, 'Year'), (1, 'First'), (2, 'Second'), (3, 'Third'), (4, 'Fourth'), (5, 'Fifth')], null=True)),
                ('gender', models.CharField(blank=True, choices=[(None, 'Gender'), ('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10, null=True)),
                ('mobile_number', models.BigIntegerField(blank=True, null=True)),
                ('profile_picture', models.URLField(blank=True, null=True)),
                ('has_ca_profile', models.BooleanField(default=False)),
                ('ky_id', models.CharField(blank=True, max_length=20, null=True)),
                ('referralCode', models.CharField(blank=True, max_length=20, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', users.manager.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CAProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postal_address', models.TextField(blank=True, null=True)),
                ('pincode', models.PositiveIntegerField(blank=True, null=True)),
                ('whatsapp_number', models.BigIntegerField(blank=True)),
                ('fb_link', models.CharField(blank=True, max_length=300, null=True)),
                ('reg_num', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('ca_id', models.CharField(blank=True, max_length=20, null=True)),
                ('is_choosen', models.BooleanField(default=False)),
                ('kyprofile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('regs', models.ManyToManyField(blank=True, related_name='regs', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='College',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collegeName', models.CharField(max_length=250)),
                ('regCount', models.IntegerField(default=0)),
            ],
        ),
        migrations.AddField(
            model_name='kyprofile',
            name='college',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.College'),
        ),
        migrations.AddField(
            model_name='kyprofile',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='kyprofile',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
